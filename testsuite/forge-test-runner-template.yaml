apiVersion: v1
kind: Pod
metadata:
  name: {FORGE_POD_NAME}
  labels:
    app.kubernetes.io/name: forge
    forge-namespace: {FORGE_NAMESPACE}
    forge-image-tag: {FORGE_IMAGE_TAG}
spec:
  restartPolicy: Never
  serviceAccountName: forge
  containers:
  - name: main
    image: {AWS_ACCOUNT_NUM}.dkr.ecr.{AWS_REGION}.amazonaws.com/aptos/forge:{FORGE_IMAGE_TAG}
    imagePullPolicy: Always
    command:
    - /bin/bash
    - -c
    - |
      ulimit -n 1048576
      forge --suite {FORGE_TEST_SUITE} --duration-secs {FORGE_RUNNER_DURATION_SECS} --avg-tps {FORGE_RUNNER_TPS_THRESHOLD} test k8s-swarm --image-tag {IMAGE_TAG} --upgrade-image-tag {UPGRADE_IMAGE_TAG} --namespace {FORGE_NAMESPACE} {REUSE_ARGS} {KEEP_ARGS} {ENABLE_HAPROXY_ARGS}
    env:
    - name: FORGE_TRIGGERED_BY
      value: {FORGE_TRIGGERED_BY}
    - name: PROMETHEUS_URL
      value: http://aptos-node-mon-aptos-monitoring-prometheus.default.svc:9090
    # - name: RUST_LOG
    #   value: debug
  affinity:
    # avoid scheduling with other forge or validator/fullnode pods
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values: ["validator", "fullnode", "forge"]
          - key: run
            operator: Exists
        topologyKey: "kubernetes.io/hostname"
  # schedule on a k8s worker node in the "validators" nodegroup
  # to access more compute
  nodeSelector:
    eks.amazonaws.com/nodegroup: validators
  tolerations:
  - effect: NoExecute
    key: aptos.org/nodepool
    value: validators
  
