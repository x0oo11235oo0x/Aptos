name: Run Forge

on:
  # this is called from within the build-images.yaml workflow since we depend on the images having been built before
  workflow_call:
    inputs:
      GIT_SHA:
        required: false
        type: string
        description: The git SHA1 to test. If not specified, Forge will check the latest commits on the current branch
      FORGE_NAMESPACE:
        required: true
        type: string
        description: The Forge k8s namespace to be used for test. This value should manage Forge test concurrency. It may be truncated.
      FORGE_CLUSTER_NAME:
        required: false
        type: string
        default: aptos-forge-0
        description: The Forge k8s cluster to be used for test
      FORGE_RUNNER_DURATION_SECS:
        required: false
        type: string
        default: 480
        description: Duration of the forge test run
      FORGE_RUNNER_TPS_THRESHOLD:
        required: false
        type: string
        default: 6000
        description: Minimum required avg tps to pass forge
      FORGE_TEST_SUITE:
        required: false
        type: string
        default: land_blocking
        description: Test suite to run
      POST_TO_SLACK:
        required: false
        type: boolean
        default: false
        description: Whether to post the test results comment to Slack
env:
  AWS_ACCOUNT_NUM: ${{ secrets.ENV_ECR_AWS_ACCOUNT_NUM }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-west-2
  IMAGE_TAG: ${{ inputs.GIT_SHA }}
  FORGE_ENABLED: ${{ secrets.FORGE_ENABLED }}
  FORGE_BLOCKING: ${{ secrets.FORGE_BLOCKING }}
  FORGE_CLUSTER_NAME: ${{ inputs.FORGE_CLUSTER_NAME }}
  FORGE_OUTPUT: forge_output.txt
  FORGE_REPORT: forge_report.json
  FORGE_COMMENT: forge_comment.txt
  FORGE_PRE_COMMENT: forge_pre_comment.txt
  FORGE_RUNNER_MODE: k8s
  FORGE_RUNNER_DURATION_SECS: ${{ inputs.FORGE_RUNNER_DURATION_SECS }}
  FORGE_RUNNER_TPS_THRESHOLD: ${{ inputs.FORGE_RUNNER_TPS_THRESHOLD }}
  FORGE_NAMESPACE: ${{ inputs.FORGE_NAMESPACE }}
  FORGE_TEST_SUITE: ${{ inputs.FORGE_TEST_SUITE }}
  POST_TO_SLACK: ${{ inputs.POST_TO_SLACK }}
  WRAPPER_KILLSWITCH: ${{ secrets.FORGE_WRAPPER_KILLSWITCH }}

jobs:
  forge:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        if: env.FORGE_ENABLED == 'true'
        with:
          ref: ${{ inputs.GIT_SHA }}
          # get the last 10 commits if IMAGE_TAG is not specified
          fetch-depth: env.IMAGE_TAG != null && 0 || 10
      - uses: actions/setup-python@v4
        if: env.FORGE_ENABLED == 'true'
        with:
          python-version: '3.9'
      - name: Install python deps
        if: ${{ env.FORGE_ENABLED == 'true' && env.WRAPPER_KILLSWITCH == 'false' }}
        run: pip3 install click==8.1.3 psutil==5.9.1
      - name: Set kubectl context
        if: env.FORGE_ENABLED == 'true'
        run: aws eks update-kubeconfig --name $FORGE_CLUSTER_NAME
      - name: Run pre-Forge checks
        if: env.FORGE_ENABLED == 'true'
        shell: bash
        env:
          FORGE_RUNNER_MODE: pre-forge
        run: |
          set +e

          source testsuite/run_forge.sh

          # append some GHA-specific content to the comment
          cat << EOF >> $FORGE_PRE_COMMENT
          * [Test runner output](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          * Pending test run ${{ github.run_attempt }} ${{ env.FORGE_BLOCKING == 'true' && 'is land-blocking' || 'is not land-blocking' }}
          * Triggered by ${{ github.event_name || github.event.pull_request.auto_merge != null && 'automerge' }}
          EOF

      - name: Post pre-Forge comment
        if: env.FORGE_ENABLED == 'true' && github.event.number != null
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          append: true
          path: ${{ env.FORGE_PRE_COMMENT }}

      - name: Run Forge
        if: env.FORGE_ENABLED == 'true'
        shell: bash
        env:
          PUSH_GATEWAY: ${{ secrets.PUSH_GATEWAY }}
          PUSH_GATEWAY_USER: ${{ secrets.PUSH_GATEWAY_USER }}
          PUSH_GATEWAY_PASSWORD: ${{ secrets.PUSH_GATEWAY_PASSWORD }}
        run: |
          set +e

          # source this script to run and get environment variables
          source testsuite/run_forge.sh

          # append some GHA-specific content to the comment
          cat << EOF >> $FORGE_COMMENT
          * [Test runner output](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          * Test run ${{ github.run_attempt }} ${{ env.FORGE_BLOCKING == 'true' && 'is land-blocking' || 'is not land-blocking' }}
          * Triggered by ${{ github.event_name || github.event.pull_request.auto_merge != null && 'automerge' }}
          EOF

          # add github step summary as described here https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary
          cat $FORGE_COMMENT >> $GITHUB_STEP_SUMMARY

          if [ "$FORGE_BLOCKING" = "true" ]; then
            exit $FORGE_EXIT_CODE
          fi

      - name: Post forge result comment
        # Post a Github comment if the run has not been cancelled and if we're running on a PR
        if: env.FORGE_ENABLED == 'true' && github.event.number != null && !cancelled()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          append: true
          recreate: true
          path: ${{ env.FORGE_COMMENT }}
      - name: Post to a Slack channel
        # Post a Slack comment if the run has not been cancelled and the envs are set
        if: env.FORGE_ENABLED == 'true' && env.POST_TO_SLACK == 'true' && !cancelled()
        id: slack
        uses: slackapi/slack-github-action@v1.21.0
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "${{ job.status == 'success' && ':white_check_mark:' || ':x:' }} ${{ github.job }}(suite: `${{ inputs.FORGE_TEST_SUITE }}`, namespace: `${{ inputs.FORGE_NAMESPACE }}`): <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|link>"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.FORGE_SLACK_WEBHOOK_URL }}
