apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "aptos-fullnode.fullname" . }}
  labels:
    {{- include "aptos-fullnode.labels" . | nindent 4 }}
    app.kubernetes.io/name: fullnode
spec:
  serviceName: {{ include "aptos-fullnode.fullname" . }}
  replicas: 1
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "aptos-fullnode.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/name: fullnode
  template:
    metadata:
      labels:
        {{- include "aptos-fullnode.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/name: fullnode
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
    spec:
      terminationGracePeriodSeconds: 0
      containers:
      - name: fullnode
        image: {{ .Values.image.repo }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/usr/local/bin/aptos-node", "-f", "/opt/aptos/etc/fullnode.yaml"]
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        env:
        {{- if .Values.logging.address }}
        - name: STRUCT_LOG_TCP_ADDR
          value: {{ $.Values.logging.address | quote }}
        {{- end }}
        - name: RUST_LOG
          value: {{ .Values.rust_log }}
        - name: RUST_LOG_REMOTE
          value: {{ .Values.rust_log_remote }}
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RUST_BACKTRACE
          value: "0"
        volumeMounts:
        - name: aptos-config
          mountPath: /opt/aptos/etc
        - name: aptos-genesis
          mountPath: /opt/aptos/genesis
        - name: aptos-data
          mountPath: /opt/aptos/data
        - name: tmp
          mountPath: /tmp
        ports:
        - containerPort: 6182
        - containerPort: 6186
        - containerPort: 8080
        - containerPort: 8081
        - containerPort: 9101
        livenessProbe:
          tcpSocket:
            port: 9101
          initialDelaySeconds: 30
        readinessProbe:
          tcpSocket:
            port: 8080
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 6180
        runAsGroup: 6180
        fsGroup: 6180
      volumes:
      - name: aptos-config
        configMap:
          name: {{ include "aptos-fullnode.fullname" . }}
      - name: aptos-genesis
        configMap:
          {{- if .Values.chain.genesisConfigmap }}
          name: {{ .Values.chain.genesisConfigmap }}
          {{- else }}
          name: {{ include "aptos-fullnode.fullname" . }}-genesis
          {{- end }}
      - name: aptos-data
        persistentVolumeClaim:
          claimName: {{ include "aptos-fullnode.fullname" . }}-e{{ .Values.chain.era }}
      - name: tmp
        emptyDir: {}
      serviceAccountName: {{ include "aptos-fullnode.serviceAccountName" . }}
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{.Values.imagePullSecret}}
      {{- end }}
