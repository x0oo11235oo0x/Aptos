global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    chain_name: {{ .Values.chain.name }}

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - localhost:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
{{- range $path, $_ := .Files.Glob "files/rules/*.yml" }}
  - {{ base $path }}
{{- end }}

scrape_configs:
{{ if .Values.monitoring.fullKubernetesScrape }}
- job_name: 'kubernetes-apiservers'
  scheme: https
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  kubernetes_sd_configs:
  - role: endpoints

  # Keep only the default/kubernetes service endpoints for the https port. This
  # will add targets for each API server which Kubernetes adds an endpoint to
  # the default/kubernetes service.
  metric_relabel_configs:
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
    action: keep
    regex: default;kubernetes;https
  - source_labels: [__name__]
    action: drop
    regex: '(.+)_request_duration_seconds_bucket'
  - target_label: owner
    replacement: {{ .Values.validator.name }}
{{ end }}

- job_name: 'kubernetes-nodes'
  scheme: https
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  kubernetes_sd_configs:
  - role: node

  {{ if not .Values.monitoring.fullKubernetesScrape }}
  metric_relabel_configs:
  - source_labels: [namespace]
    action: keep
    regex: "{{ .Release.Namespace }}"
  {{ end }}

  relabel_configs:
  - action: labelmap
    regex: __meta_kubernetes_node_label_(.+)
  - target_label: __address__
    replacement: kubernetes.default.svc:443
  - source_labels: [__meta_kubernetes_node_name]
    regex: (.+)
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}/proxy/metrics

- job_name: 'kubernetes-cadvisor'
  scheme: https
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  kubernetes_sd_configs:
  - role: node

  relabel_configs:
  - target_label: __address__
    replacement: kubernetes.default.svc:443
  - source_labels: [__meta_kubernetes_node_name]
    regex: (.+)
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

 {{ if not .Values.monitoring.fullKubernetesScrape }}
  metric_relabel_configs:
  - source_labels: [namespace, pod]
    action: keep
    regex: "{{ .Release.Namespace }};{{ .Release.Name }}-.*"
  {{ end }}

{{ if .Values.monitoring.useKubeStateMetrics }}
- job_name: 'kube-state-metrics'
  static_configs:
  - targets: ['kube-state-metrics.default.svc.cluster.local:8080']
{{ end }}

- job_name: "prom-pod-annotation"

  kubernetes_sd_configs:
  - role: pod

  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
    action: keep
    regex: true
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
    action: replace
    target_label: __metrics_path__
    regex: (.+)
  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
    action: replace
    regex: ([^:]+)(?::\d+)?;(\d+)
    replacement: ${1}:${2}
    target_label: __address__
  - source_labels: [__meta_kubernetes_namespace]
    action: replace
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_name]
    action: replace
    target_label: kubernetes_pod_name

  metric_relabel_configs:
  - source_labels: [__name__]
    regex: 'vector_files_(.+)_total'
    action: drop

- job_name: "aptos-procs"

  kubernetes_sd_configs:
  - role: pod

  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_container_port_number]
    action: keep
    regex: "9101"
  - source_labels: [__meta_kubernetes_namespace]
    action: replace
    target_label: namespace
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
    action: replace
    target_label: role
  - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_instance]
    action: replace
    target_label: instance
  - source_labels: [__meta_kubernetes_pod_name]
    action: replace
    target_label: kubernetes_pod_name

{{ if .Values.monitoring.prometheus.remote_write.enabled }}
{{ with .Values.monitoring.prometheus.remote_write }}
remote_write:
  - url: {{ .url }}
    sigv4:
      region: {{ .region }}
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500
{{ end }}
{{ end }}

