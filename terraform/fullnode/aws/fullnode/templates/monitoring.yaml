apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "pfn.fullname" . }}-grafana
  labels:
    {{- include "pfn.labels" . | nindent 4 }}
data:
  prometheus.yml: |-
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        isDefault: true
        access: proxy
        url: http://localhost:9090

  dashboards.yml: |-
    apiVersion: 1
    providers:
    - name: 'default'
      folder: 'aptos'
      type: file
      options:
        path: /etc/grafana/dashboards/aptos
  
  grafana.ini: |-
{{ (tpl (.Files.Get "files/grafana.ini") .) | indent 4 }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "pfn.fullname" . }}-prometheus
  labels:
    {{- include "pfn.labels" . | nindent 4 }}
data:
{{ (tpl (.Files.Glob "files/rules/*.yml").AsConfig .) | indent 2 }}
  prometheus.yml: |-
{{ (tpl (.Files.Get "files/prometheus.yml") .) | indent 4 }}
  alertmanager.yml: |-
{{ (tpl (.Files.Get "files/alertmanager.yml") .) | indent 4 }}

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "pfn.fullname" . }}-prometheus
  labels:
    {{- include "pfn.labels" . | nindent 4 }}
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: {{ .Values.monitoring.prometheus.storage.class }}
  resources:
    requests:
      storage: {{ .Values.monitoring.prometheus.storage.size }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ include "pfn.fullname" . }}-monitoring
  labels:
    {{- include "pfn.labels" . | nindent 4 }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    {{- if .Values.service.domain }}
    external-dns.alpha.kubernetes.io/hostname: mon.{{ .Values.service.domain }}
    {{- end }}
spec:
  selector:
    {{- include "pfn.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/name: monitoring
  ports:
  - name: grafana-http
    port: 80
    targetPort: 3000
  type: LoadBalancer
  {{- with .Values.service.monitoring.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{- toYaml . | nindent 4 }}
  {{- end }}

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "pfn.fullname" . }}-prometheus
  labels:
    {{- include "pfn.labels" . | nindent 4 }}
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "pfn.fullname" . }}-prometheus
  labels:
    {{- include "pfn.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "pfn.fullname" . }}-prometheus
subjects:
- kind: ServiceAccount
  name: {{ include "pfn.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "pfn.fullname" . }}-monitoring
  labels:
    {{- include "pfn.labels" . | nindent 4 }}
    app.kubernetes.io/name: monitoring
spec:
  serviceName: {{ include "pfn.fullname" . }}-monitoring
  replicas: 1
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "pfn.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/name: monitoring
  template:
    metadata:
      labels:
        {{- include "pfn.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/name: monitoring
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        checksum/prometheus.yml: {{ tpl (.Files.Get "files/prometheus.yml") . | sha256sum }}
        checksum/alertmanager.yml: {{ tpl (.Files.Get "files/alertmanager.yml") . | sha256sum }}
    spec:
      {{- $domain := .Values.service.domain -}}
      {{- with .Values.monitoring }}
      containers:
      - name: prometheus
        image: {{ .prometheus.image.repo }}:{{ .prometheus.image.tag }}
        imagePullPolicy: {{ .prometheus.image.pullPolicy }}
        args:
        - "--web.enable-lifecycle"
        - "--config.file=/etc/prometheus/prometheus.yml"
        - "--storage.tsdb.min-block-duration=15m"
        - "--storage.tsdb.max-block-duration=30m"
        - "--storage.tsdb.retention.time={{ .prometheus.retention }}"
        resources:
          {{- toYaml .prometheus.resources | nindent 10 }}
        ports:
        - containerPort: 9090
        livenessProbe:
          httpGet:
            path: /v1/-/healthy
            port: 9090
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        - name: prometheus-data
          mountPath: /prometheus
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 65534
          runAsGroup: 65534
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - name: alertmanager
        image: {{ .alertmanager.image.repo }}:{{ .alertmanager.image.tag }}
        imagePullPolicy: {{ .alertmanager.image.pullPolicy }}
        args:
        - "--config.file=/etc/alertmanager/alertmanager.yml"
        - "--storage.path=/alertmanager"
        - "--log.level={{ .alertmanager.logLevel }}"
        resources:
          {{- toYaml .alertmanager.resources | nindent 10 }}
        ports:
        - containerPort: 9093
        livenessProbe:
          httpGet:
            path: /v1/-/healthy
            port: 9093
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9093
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/alertmanager
        - name: alertmanager-data
          mountPath: /alertmanager
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 65534
          runAsGroup: 65534
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - name: grafana
        image: {{ .grafana.image.repo }}:{{ .grafana.image.tag }}
        imagePullPolicy: {{ .grafana.image.pullPolicy }}
        command: ["/bin/sh", "-c"]
        args: ["cp /dashboards/* /etc/grafana/dashboards/aptos && gunzip -f /etc/grafana/dashboards/aptos/*.json.gz && exec /run.sh"]
        resources:
          {{- toYaml .grafana.resources | nindent 10 }}
        ports:
        - containerPort: 3000
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
        volumeMounts:
        - name: grafana-config
          mountPath: /etc/grafana
        - name: grafana-provisioning
          mountPath: /etc/grafana/provisioning
        - name: grafana-dashboards-archive
          mountPath: /dashboards
        - name: grafana-dashboards
          mountPath: /etc/grafana/dashboards/aptos
        - name: grafana-data
          mountPath: /var/lib/grafana
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 472
          runAsGroup: 472
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
        fsGroup: 65534
      {{- end }}
      serviceAccountName: {{ include "pfn.serviceAccountName" . }}
      volumes:
      - name: prometheus-config
        configMap:
          name: {{ include "pfn.fullname" . }}-prometheus
      - name: prometheus-data
        persistentVolumeClaim:
          claimName: {{ include "pfn.fullname" . }}-prometheus
      - name: alertmanager-data
        emptyDir: {}
      - name: grafana-config
        configMap:
          name: {{ include "pfn.fullname" . }}-grafana
          items:
          - key: grafana.ini
            path: grafana.ini
      - name: grafana-provisioning
        configMap:
          name: {{ include "pfn.fullname" . }}-grafana
          items:
          - key: prometheus.yml
            path: datasources/prometheus.yml
          - key: dashboards.yml
            path: dashboards/dashboards.yml
      - name: grafana-dashboards-archive
        configMap:
          name: {{ include "pfn.fullname" . }}-dashboards
      - name: grafana-dashboards
        emptyDir: {}
      - name: grafana-data
        emptyDir: {}
